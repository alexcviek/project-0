"use strict";var playerName=void 0,playerChosen=void 0,villianChosen=void 0,characters={one:{name:"No1",image:"public/assets/images/gingerkitten.jpg"},two:{name:"No2",image:"public/assets/images/gingerkitten.jpg"},three:{name:"No3",image:"public/assets/images/gingerkitten.jpg"}},villians={one:{name:"Villian No1",image:"public/assets/images/villian.jpg"},two:{name:"Villian No2",image:"public/assets/images/villian.jpg"},three:{name:"Villian No3",image:"public/assets/images/villian.jpg"}},score=void 0,highscore=void 0;$(function(){function e(){$(".welcome").addClass("hidden"),$(".instructions").removeClass("hidden")}function i(){$(".instructions").addClass("hidden"),$(".welcome").removeClass("hidden")}function a(){$(".welcome").addClass("hidden"),$(".character").removeClass("hidden")}function n(){$(".character").addClass("hidden"),$(".chosen-character").removeClass("hidden")}function s(){playerName=$(this).val(),$("#name").text("Hello "+playerName+"!"),$(".player1-name").text(playerName)}function l(){$(this).toggleClass("active").siblings().removeClass("active");var e=$(this).attr("id");playerChosen=characters[e],$(".chosen-character img, .player1").attr("src",playerChosen.image),villianChosen=villians[e],$(".villian").attr("src",villianChosen.image),$(".villian-name").text(villianChosen.name)}function o(){$(".chosen-character").addClass("hidden"),$(".game-window").removeClass("hidden")}$("#instructions").on("click",e),$("#back").on("click",i),$("#play").on("click",a),$("#start").on("click",n),$(".name").on("keyup",s),$(".person").on("click",l),$("#kick-off").on("click",o)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
